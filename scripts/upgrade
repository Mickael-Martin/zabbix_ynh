#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# LOAD SETTINGS
#=================================================
ynh_script_progression --message="Loading installation settings..."

app=$YNH_APP_INSTANCE_NAME
trustedversion="4.4-1+stretch"
forceupdate=0
export domain=$(ynh_app_setting_get --app=$app --key=domain)
export path_url=$(ynh_app_setting_get --app=$app --key=path)
is_public=$(ynh_app_setting_get --app=$app --key=is_public)
final_path=$(ynh_app_setting_get --app=$app --key=final_path)
db_name=$(ynh_app_setting_get --app=$app --key=db_name)
db_user=$(ynh_app_setting_get --app=$app --key=db_user)
db_pwd=$(ynh_app_setting_get --app=$app --key=mysqlpwd)

#=================================================
# CHECK VERSION
#=================================================
ynh_script_progression --message="Checking version..."

upgrade_type=$(ynh_check_app_version_changed)

#=================================================
# BACKUP BEFORE UPGRADE THEN ACTIVE TRAP
#=================================================
ynh_script_progression --message="Backing up the app before upgrading (may take a while)..."

# Backup the current version of the app
ynh_backup_before_upgrade
ynh_clean_setup () {
	# Restore it if the upgrade fails
	ynh_restore_upgradebackup
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression --message="Ensuring downward compatibility..."

# Cleaning legacy permissions
if ynh_legacy_permissions_exists; then
	ynh_legacy_permissions_delete_all
fi

export mysqlconn="mysql -u$db_user -p$db_pwd $db_name"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Upgrading NGINX web server configuration..."

# Create a dedicated NGINX config
ynh_add_nginx_config

#=================================================
# PHP-FPM CONFIGURATION
#=================================================
ynh_script_progression --message="Upgrading PHP-FPM configuration..."

# Create a dedicated PHP-FPM config
ynh_add_fpm_config

#=================================================
# SPECIFIC UPGRADE
#=================================================
# DISABLED SSOWAT
#=================================================
ynh_print_info "disable SSOWAT temporaly"
ynh_app_setting_set $app unprotected_uris "/"
systemctl reload nginx
yunohost app ssowatconf

#=================================================
# Enable default admin temporaly
#=================================================
enable_admin_user

#=================================================
# Import Yunohost template
#=================================================
import_template

#=================================================
# Link Yunohost template to the ZAbbix Server Host
#=================================================
link_template

#=================================================
# Disable default admin for security issue
#=================================================
disable_admin_user

#=================================================
# Disable default guest for security issue
#=================================================
disable_guest_user

#Patch timeout too short for zabbix agent if needed
change_timeoutAgent  

#patch if zabbix-release installed
if [ "$(dpkg -l zabbix-release 2>/dev/null | wc -l)" -ne 0 ];then
    DEBIAN_FRONTEND=noninteractive apt purge zabbix-release -y
    install_zabbix_repo
fi

#patch if zabbix-release has Candidate version but no Installed version
if [ -f "/etc/apt/sources.list.d/zabbix.list" ];then
    if [ "$(grep -c "4.2" /etc/apt/sources.list.d/zabbix.list)" -eq 1 ];then
        install_zabbix_repo
        forceupdate=1
    fi
fi

#patch to remove old zabbix-client service
if [ ! -z "$(yunohost service status | grep zabbix-client)" ];then 
    ynh_print_info "remove zabbix-client old service"
    yunohost service remove zabbix-client
fi

#REMOVE DUPLICATE LOG ENTRY IN LOGROTATE PATCH IF NEEDED
ynh_remove_logrotate

ynh_print_info "Check if new zabbix version is available on repo"
ynh_package_update

zabbixReleaseInstalledVersion=$(apt-cache policy zabbix-release | sed -n '2p' | grep -Po ".* \K(.*)")

if [[ "$trustedversion" > "$zabbixReleaseInstalledVersion" ]] || [[ "$forceupdate" == "1" ]]
then
	    #=================================================
	    # BACKUP BEFORE UPGRADE THEN ACTIVE TRAP
	    #=================================================
	    
	    # Backup the current version of the app
	    ynh_backup_before_upgrade
	    ynh_clean_setup () {
		# restore it if the upgrade fails
		    ynh_restore_upgradebackup
	    }
	    # Exit if an error occurs during the execution of the script
	    ynh_abort_if_errors
	    
	    yunohost service stop zabbix-server
	    yunohost service stop zabbix-agent
	    
	    cp -rp /etc/zabbix /tmp/
	    cp -p /usr/share/zabbix/conf/zabbix.conf.php /tmp/
	    
	    DEBIAN_FRONTEND=noninteractive apt-mark unhold zabbix-server-mysql zabbix-frontend-php
	    ynh_package_remove zabbix-server-mysql zabbix-frontend-php

        ynh_print_info "Update zabbix via apt package"
		ynh_install_app_dependencies $pkg_dependencies	    
	    ynh_secure_remove /usr/share/zabbix/conf/zabbix.conf.php
	    cp -rpf /tmp/zabbix /etc/
	    cp -pf /tmp/zabbix.conf.php /usr/share/zabbix/conf/
	    
	    ynh_secure_remove /tmp/zabbix*
	    
	    #If needed.
	    yunohost service add snmpd -d "Management of SNMP Daemon"
        yunohost service add zabbix-server -d "Management Zabbix server daemon : Collect, agregate, compute and notify"
        yunohost service add zabbix-agent -d "Management Zabbix agent daemon : send informations about this host to the server"
	    
	    yunohost service start zabbix-server
	    yunohost service start zabbix-agent
	    
	    #test if zabbix server is started
        check_proc_zabbixagent
        
        #test if zabbix agent is started
        check_proc_zabbixserver

else
	ynh_print_info "No repo update ! (Trusted version)"
fi

#=================================================
# INSTALL hook to verify if conf file is broken (after an update for example)
#=================================================
update_initZabbixConf

#=================================================
# Update db to utf8
#=================================================
convert_ZabbixDB

#=================================================
# Add settings for yunohost mail server
#=================================================
set_mediatype_default_yunohost

#=================================================
# RE-ENABLE SSOWAT
#=================================================
ynh_print_info "re-enable SSOWAT"
# Make app private if necessary
if [ $is_public -eq 0 ]
then
    # unprotected_uris allows SSO credentials to be passed anyway.
    ynh_app_setting_delete $app unprotected_uris
else
    ynh_app_setting_set $app unprotected_uris "/"
fi

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading NGINX web server..."

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Upgrade of $app completed"
